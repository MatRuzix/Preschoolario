// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  seed = "ts-node prisma/seed.ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String    @id @default(uuid())
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  email                 String    @unique
  emailVerified         DateTime?
  acceptTerms           Boolean
  firstName             String
  lastName              String
  password              String
  image                 String?
  role                  Role      @default(PARENT)
  forgotPasswordToken   String?
  forgotPasswordExpiry  DateTime?
  verificationToken     String?
  verificationExpiry    DateTime?
  children              Child[]
}

model Group {
  id                    String    @id @default(uuid())
  children              Child[]
  name                  String    @unique
  image                 String?
  events                Event[]
}

model Child {
  id                    String    @id @default(uuid())
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  parentEmails          String[]
  firstName             String
  lastName              String
  image                 String?
  motherFirstName       String?
  motherLastName        String?
  fatherFirstName       String?
  fatherLastName        String?
  dateOfBirth           DateTime
  group                 Group?     @relation(fields: [groupId], references: [id])
  groupId               String?
  parent                User?   @relation(fields: [parentId], references: [id])
  parentId              String?
}

model Event {
  id                    String    @id @default(uuid())
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  groups                Group[]
  title                 String
  description           String
  dueDate               DateTime
}

enum Role {
  ADMIN
  TEACHER
  PARENT
}